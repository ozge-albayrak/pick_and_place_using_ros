<?xml version = "1.0"?>

<launch>
    <!-- Associate to the robot description parameter, the urdf file that model the robot -->
    <param name="robot_description" command= "$(find xacro)/xacro --inorder $(find custom_robot_description)/urdf/6_axis_robot.urdf.xacro"/>

    <!-- Set the position in empty world -->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0" />

    <!-- Associate to the robot description parameter, the urdf file that model the cube -->
    <param name="robot_description_cube" command= "$(find xacro)/xacro --inorder $(find custom_robot_description)/urdf/red_cube.urdf"/>

    <!-- Set the position of the cube in empty world -->
    <arg name="x_cube" default="0.621" />
    <arg name="y_cube" default="-0.033" />
    <arg name="z_cube" default="1.1" />


    <!-- Put world file as argumemt -->
    <arg name="world_file" default ="$(find industrial_env)/worlds/pick_and_place_workplace.world" />

    <!-- Launch Gazebo world in paused -->
    <include file = "$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name ="use_sim_time" value="true" />
        <arg name ="debug" value="false" />
        <arg name ="gui" value="true" />
        <arg name ="paused" value="true" />
        <arg name ="world_name" value="$(arg world_file)" />
    </include>

    <!-- Spawn the robot using the package gazebo_ros -->
    <node name="spawn_the_robot" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model cobot -x $(arg x) -y $(arg y) -z $(arg z)" />

    <!-- Spawn the cube using the package gazebo_ros -->
    <node name="spawn_the_cube" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description_cube -model red_cube -x $(arg x_cube) -y $(arg y_cube) -z $(arg z_cube)" />

    <!-- Load the controllers -->
    <rosparam command="load" file="$(find custom_robot_gazebo)/config/joint_controllers.yaml"/>

    <!-- Load the node controller manager-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"  
            output="screen" respawn="false" ns="/cobot"
            args="joint_state_controller
                joint1_position_controller
                joint2_position_controller
                joint3_position_controller
                joint4_position_controller
                joint5_position_controller
                joint6_position_controller
                gripper_controller_right
                --timeout 60 " >
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
        <remap from="/joint_states" to="/cobot/joint_states"/>

    <!-- Convert joint states to TF transform for rviz and rqt -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" 
            output="screen" respawn="false" >
            <remap from="/joint_states" to="cobot/joint_states" />

    </node>

    <node name="rqt_reconfigure" pkg="rqt_gui" type="rqt_gui" /> 
     

</launch>